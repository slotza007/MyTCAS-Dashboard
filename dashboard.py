import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# ===== ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• =====
df = pd.read_excel("engineering_ai_programs_full.xlsx")

# ===== ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç =====
def extract_fee(x):
    try:
        num = ''.join(c for c in x if c.isdigit() or c == ',')
        return int(num.replace(',', ''))
    except:
        return np.nan

df['‡∏Ñ‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏° (‡∏ö‡∏≤‡∏ó)'] = df['‡∏Ñ‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏°'].apply(extract_fee)

# ===== Header =====
st.title("üìä Dashboard ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£ AI ‡πÅ‡∏•‡∏∞ ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡πÑ‡∏ó‡∏¢")
st.markdown("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏î‡πâ‡∏≤‡∏ô AI ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå")

# ===== Summary Cards =====
col1, col2, col3 = st.columns(3)
col1.metric("üéì ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£", f"{df.shape[0]}")
col2.metric("üè´ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢", f"{df['‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢'].nunique()}")
col3.metric("üí∏ ‡∏Ñ‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏°‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢", f"{df['‡∏Ñ‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏° (‡∏ö‡∏≤‡∏ó)'].mean():,.0f} ‡∏ö‡∏≤‡∏ó")

# ===== Filters =====
with st.sidebar:
    st.header("üîç ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á")
    univ_options = df["‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢"].unique()
    selected_univ = st.multiselect("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢", options=univ_options, default=univ_options)
    df = df[df["‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢"].isin(selected_univ)]

# ===== ‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ =====
st.subheader("üìà ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ï‡πà‡∏≠‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢")
chart_type = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏£‡∏≤‡∏ü", ["Bar Chart", "Pie Chart", "Line Chart"], key="course_chart")

course_count = df["‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢"].value_counts()

if chart_type == "Bar Chart":
    st.bar_chart(course_count)
elif chart_type == "Pie Chart":
    fig1, ax1 = plt.subplots()
    ax1.pie(course_count, labels=course_count.index, autopct='%1.1f%%', startangle=90)
    ax1.axis('equal')
    st.pyplot(fig1)
elif chart_type == "Line Chart":
    st.line_chart(course_count)

# ===== ‡∏Ñ‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏°‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ =====
st.subheader("üíµ ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Ñ‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏°‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢")
chart_type2 = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏£‡∏≤‡∏ü‡∏Ñ‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏°", ["Bar Chart", "Pie Chart"], key="fee_chart")

fee_avg = df.groupby("‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢")["‡∏Ñ‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏° (‡∏ö‡∏≤‡∏ó)"].mean().sort_values()

if chart_type2 == "Bar Chart":
    st.bar_chart(fee_avg)
elif chart_type2 == "Pie Chart":
    fig2, ax2 = plt.subplots()
    ax2.pie(fee_avg, labels=fee_avg.index, autopct='%1.1f%%', startangle=90)
    ax2.axis('equal')
    st.pyplot(fig2)

# ===== ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• =====
st.subheader("üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£")
st.dataframe(df[["‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢", "‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£", "‡∏Ñ‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏°"]])
